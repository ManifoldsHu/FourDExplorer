性能测试 

测试数据：
- 随机生成的 numpy 四维数据集，形状为 (512, 512, 256, 256)，数据类型为 float32。数据集大小为 64 GiB，存储于 HDF5 文件中，数据块大小为 (1, 1, 256, 256)。我们使用该数据集作为模拟 4D-STEM 数据集，每个形状为 (256, 256) 的切片作为 4D-STEM 的衍射图样
- 同上，但在存储时经过压缩。压缩方法为 gzip，压缩率设为 4 (采用 h5py 提供的 api)



测试操作：
- 对每个形状为 (256, 256) 的切片，逐元素乘以一个形状为 (256, 256) 的、数据类型为 float32 的随机矩阵，并求和（换句话说，这实际上是点乘操作）。
- 求和的结果，将会是一个形状为 (512, 512) 的矩阵。这种计算可以模拟 4D-STEM 中的 CoM、DPC 以及虚拟成像的过程。
- 我们需要测量该计算过程，在不同的数据集以及不同的计算配置下所需的时间。


计算配置：
- 基于 Dask 的 LocalCluster 的并行计算
	- 分别设置 1, 2, 4, 8, 16 个工作进程 (worker)
	- 每个工作进程设置 1, 2, 4 个线程 
	- 每个工作进程分配 4 GiB 内存容量
	- 单个 h5 文件

- 基于 Dask 的 LocalCluster 的并行读取和计算
	- 分别设置 2, 4, 8, 16 个工作进程
	- 每个工作进程设置 1, 2, 4 个线程
	- 每个工作进程分配 4 GiB 内存容量
	- 两个相同的 h5 文件，分布在不同的磁盘上*

- 基于手写脚本的多进程并行计算
	- 分别设置 1, 2, 4, 8, 16 个工作进程 (worker)
	- 每个工作进程为单线程
	- 每个工作进程分配 4 GiB 内存容量
	- 单个 h5 文件

- 基于手写脚本的并行读取和计算
	- 分别设置  1, 2, 4, 8, 16 个工作进程 (worker)
	- 每个工作进程为单线程
	- 每个工作进程分配 4 GiB 内存容量
	- 两个相同的 h5 文件，分布在不同的磁盘上*

- (对照组) 基于手写的单进程读取 h5 文件并计算
	- 根据原理，其结果应当与 “基于手写的多进程并行读取 h5 文件并计算”的结果是一致的
	- 该对照组用于测试目前 4D-Explorer 所采用的方法，计算所需时间

- (对照组) 基于手写的单线程计算 (全部加载内存)
	- 一次性将所有数据读进内存后再进行计算。仅记录计算所需时间，不计算读取所需时间
	- 该对照组用于测试在排除 IO 耗时的情况下，计算所需的时间

- (对照组) 基于 Dask 的 LocalCluster 的多进程大数据计算
	- 设置 8 个工作进程 (Worker)
	- 每个工作进程分配 2 个线程
	- 每个工作进程分配 1 GiB 内存容量
	- 单个 h5 文件
	- 数据集形状为 (1024, 1024, 256, 256) ，数据类型为 float32，大小为 256 GiB
	- 该对照组用于测试超大数据集 (大于内存容量) 的计算情况

- (对照组) 基于 Dask 的 LocalCluster 的多进程小数据计算
	- 设置 1, 2, 4, 8, 16 个工作进程 (Worker)
	- 每个工作进程分配 1, 2, 4 个线程
	- 每个工作进程分配 1 GiB 内存容量
	- 单个 h5 文件
	- 数据集形状为 (128, 128, 256, 256) ，数据类型为 float32，大小为 4 GiB
	- 该对照组用于测试较小数据集 (小于内存容量) 的计算情况


*其中一个磁盘 (D) 经过南桥 PCIE 通道连接 CPU，另一个磁盘直连 CPU。这样可以达到超过 7 GiB/s 的读取速度


环境： 
- CPU: Intel Core i9-13900K;
- 内存: 128 GiB DDR5, 频率 4000 MHz;
- 磁盘: 
	o Samsung SSD 990 Pro (2 TB), 通过 PCIE 4.0 x 4 通道直连 CPU，顺序读取速度 7450 MiB/s
	o Fanxiang S880 (4 TB), 连接于南桥，顺序读取速度 7300 MiB/s
- 主板: Micro-Star Z790-A Pro WIFI, 南桥经 PCIE 4.0 x 4 通道连接 CPU
- GPU: NVIDIA RTX 4090
- 操作系统: Windows 11 professional 23H2
- python: 3.10.0
- dask: 2024.1.1 distributed
- h5py: 3.10.0
- numpy: 1.26.2


测试结果：

